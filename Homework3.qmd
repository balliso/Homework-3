---
title: "Homework3"
format: html
editor: visual
---

## Task 1: Control Flow Practice

```{r}
load("hw2_list.rda")
```

Created new column in each data frame

```{r}
bp_list$placebo$status <- character(10)
bp_list$treatment$status <- character(20)
```

Created for loop, used if/then/else logic for post treatment bp, saved to status column

```{r}
for(i in seq_along(bp_list$treatment$post_bp)) {
number <- bp_list$treatment$post_bp[i]
  
  if(number > 130) {
    bp_list$treatment$status[i] <- "high"
  } else if(number > 120 & number <= 130) {
   bp_list$treatment$status[i] <- "borderline"
  } else if(number <= 120) {
    bp_list$treatment$status[i] <- "optimal"
  }
}
```

Check results

```{r}
table(bp_list$treatment$status)
```

Created for loop, used if/then/else logic for placebo bp, saved to status column

```{r}
for(i in seq_along(bp_list$placebo$post_bp)) {
number <- bp_list$placebo$post_bp[i]
  
  if(number > 130) {
    bp_list$placebo$status[i] <- "high"
  } else if(number > 120 & number <= 130) {
   bp_list$placebo$status[i] <- "borderline"
  } else if(number <= 120) {
    bp_list$placebo$status[i] <- "optimal"
  }
}
```

Check resutls

```{r}
table(bp_list$placebo$status)
```

## Task 2: Function Writing

Created function

```{r}
summarize_bp <- function(bp_list, stat = "mean") {
  my_fun <- get(stat)
  treat_pre <- my_fun(bp_list$treatment$pre_bp)
  treat_post <- my_fun(bp_list$treatment$post_bp)
  treat_diff <- my_fun(bp_list$treatment$diff_bp)
  plac_pre <- my_fun(bp_list$placebo$pre_bp)
  plac_post <- my_fun(bp_list$placebo$post_bp)
  plac_diff <- my_fun(bp_list$placebo$diff_bp)
  
  results <- c(treat_pre, treat_post, treat_diff, plac_pre, plac_post, plac_diff)
  
  names(results) <- c(paste0("treatment_pre_", stat), paste0("treatment_post_", stat), paste0("treatment_diff_", stat), paste0("placebo_pre_", stat), paste0("placebo_post_", stat), paste0("placebo_diff_", stat)
  )
  
  return(results)
}
```

Tested function

```{r}
summarize_bp(bp_list)
summarize_bp(bp_list, "var")
summarize_bp(bp_list, "sd")
summarize_bp(bp_list, "min")
summarize_bp(bp_list, "max")
```
